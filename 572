/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    string mid(TreeNode* root){
        stack<TreeNode*> q;q.push(root);
        string s;
        while(!q.empty()){
            root=q.top();q.pop();
            if(root==nullptr)
                s+=",#";
            else 
                s+=","+to_string(root->val);
            if(root){
                q.push(root->right);
                q.push(root->left);
            }
        }
        
        return s;
    }
    bool isSubtree(TreeNode* s, TreeNode* t) {
        string s1=mid(s),s2=mid(t);
        cout<<s1<<"\n"<<s2<<endl;
        return s1.find(s2)!=string::npos;
    }
};
