/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    //链表上进行O(nlog(n))排序
    //归并排序和快速排序比较合适
    
    //归并排序
    ListNode* sortList(ListNode* head) {
        if(!head||!head->next)return head;
        ListNode *pre=nullptr,*slow=head,*fast=head;
        //分成两半
        while(fast&&fast->next){
            pre=slow;
            slow=slow->next;
            fast=fast->next->next;
        }
        pre->next=nullptr;
        return merge(sortList(head),sortList(slow));
    }
    ListNode* merge(ListNode* l1,ListNode* l2){
        ListNode pre(0);pre.next=nullptr;
        ListNode* last=&pre;
        while(l1||l2){
            if(!l2||l1&&l1->val<=l2->val)
                last->next=l1,last=last->next,l1=l1->next;
            else
                last->next=l2,last=last->next,l2=l2->next;
        }
        return pre.next;
    }
};
