/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
    typedef vector<int> vi;
    
    void dfs(TreeNode* root,int sum,int add,vector<vi>& res,vi& path){
         path.push_back(root->val);
        if(!root->left&&!root->right){
            if(add+root->val==sum)
                res.push_back(path);
            path.pop_back();
            return ;
        }
       
        if(root->left)  
            dfs(root->left,sum,add+root->val,res,path);
        if(root->right)
            dfs(root->right,sum,add+root->val,res,path);
        path.pop_back();
    }
    
    vector<vector<int>> pathSum(TreeNode* root, int sum) {
        vector<vi> res;
        if(!root)return res;
        vi path;
        dfs(root,sum,0,res,path);
        return res;
    }
};
