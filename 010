class Solution {
public:
    bool isMatch(string s, string p) {
        if(p.empty())return s.empty();
        
        if(p.size()>1&&p[1]=='*')
            return (isMatch(s,p.substr(2))||!s.empty()&&(s[0]==p[0]||p[0]=='.')&&isMatch(s.substr(1),p));
        else
            return !s.empty()&&(p[0]=='.'||s[0]==p[0])&&isMatch(s.substr(1),p.substr(1));
    }
};

class Solution {
public:
    bool isMatch(string s, string p) {
        
        int n=s.length(),m=p.length();
        
        vector<vector<bool>> dp(n+1,vector<bool>(m+1,false));
        
        dp[0][0]=true;
        
        for(int j=2;j<=m;j++)
            dp[0][j]=dp[0][j-2]&&p[j-1]=='*';
        
        for(int i=1;i<=n;i++)
            for(int j=1;j<=m;j++)
                if(p[j-1]!='*')
                    dp[i][j]=dp[i-1][j-1]&&(s[i-1]==p[j-1]||p[j-1]=='.');
                else
                    dp[i][j]=j>1&&(dp[i][j-2]||dp[i-1][j]&&(s[i-1]==p[j-2]||p[j-2]=='.'));
        return dp[n][m];
    }
};
