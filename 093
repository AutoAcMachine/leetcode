class Solution {
public:
    vector<string> restoreIpAddresses(string s) {
        vector<string> ret;
        if(s.size() > 12)
            return ret;
        int n=s.length();
        for(int i = 0; i < n-3; i ++){
            string ip1 = s.substr(0, i+1);
            if(n-i-1>9||!check(ip1))continue;
            for(int j = i+1; j < n-2; j ++){
                string ip2 = s.substr(i+1, j-i);
                if(n-1-j>6||!check(ip2))continue;
                for(int k = j+1; k < n-1; k ++){
                    string ip3 = s.substr(j+1, k-j);
                    string ip4 = s.substr(k+1);
                    if(check(ip3) && check(ip4))
                    {
                        string ip = ip1 + "." + ip2 + "." + ip3 + "." + ip4;
                        ret.push_back(ip);
                    }
                }
            }
        }
        return ret;
    }
    bool check(string ip)
    {
        int value = stoi(ip);
        if(ip[0] == '0')
        {
            return (ip.size() == 1);
        }
        else
        {
            if(value <= 255)
                return true;
            else
                return false;
        }
    }
};
