/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode(int x) : val(x), next(NULL) {}
 * };
 */
class Solution {
public:
    
    ListNode* reverseList(ListNode* head) {
        ListNode* pre=NULL;
        ListNode* next=NULL;
        while(head!=NULL){
            next=head->next;
            head->next=pre;
            pre=head;
            head=next;
        }
        return pre;
    }
    
    bool isPalindrome(ListNode* head) {
        if(!head||!head->next)return true;
        ListNode* fast=head->next,*slow=head;
        
        while(fast&&fast->next){
            fast=fast->next->next;
            slow=slow->next;
        }
        
        ListNode* head2=slow->next;
        slow->next=nullptr;
        head2=reverseList(head2);
        
        while(head&&head2){
            if(head->val!=head2->val)
                return false;
            head=head->next;
            head2=head2->next;
        }
        
        return true;
    }
};
