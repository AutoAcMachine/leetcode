class Solution {
public:
    int n,m;
    typedef vector<int>vi;
    void dfs(int x,int y,vector<vi>& vis,vector<vector<char>>&grid){
        if(x<0||x>=n||y<0||y>=m)return ;
        if(vis[x][y]||grid[x][y]=='0')return ;
        vis[x][y]=1;
        dfs(x,y+1,vis,grid);
        dfs(x,y-1,vis,grid);
        dfs(x+1,y,vis,grid);
        dfs(x-1,y,vis,grid);
    }
    
    int numIslands(vector<vector<char>>& grid) {
        if(grid.empty())return 0;
        n=grid.size(),m=grid[0].size();
        int res=0;
        vector<vi> vis(n,vi(m,0));
        for(int i=0;i<n;i++)for(int j=0;j<m;j++)
            if(grid[i][j]=='1'&&!vis[i][j]){
                dfs(i,j,vis,grid);
                ++res;
            }
        return res;
    }
};
